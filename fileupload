package soo.md.service;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import lombok.extern.log4j.Log4j;
import soo.md.fileSet.MD5Encoding;
import soo.md.fileSet.Path;
import soo.md.mapper.BoardMapper;

@Log4j
@Service
public class FileUploadServiceImpl implements FileUploadService {
	
	
	private final BoardMapper boardMapper;
	
	@Autowired
	public  FileUploadServiceImpl(BoardMapper boardMapper) {
		this.boardMapper = boardMapper;
	}
	
	@Override
	public String saveStore(MultipartFile file) {
		String ofname = file.getOriginalFilename();
		String resultFname = result(ofname);
		log.info(" save File =  " +resultFname);
		//확장자 추가
		boolean flag = writeFile(file , resultFname);
		if(flag) {
			log.info(" success");
		} else {
			log.info(" fail ");
		}
		
		return Path.FILE_STORE + resultFname;
	}
	
	@Override
	public String result(String ofname){
		String saveFileName = "";
		String result="";
		log.info(" if of" + ofname);
			if(ofname.contains(".")) {
				String saveFileNameSubString[] = ofname.split("\\.");
				String ofnameSplitStringFname = saveFileNameSubString[0];
				String fileExtention = saveFileNameSubString[1];
				if(ofnameSplitStringFname != null) {
					saveFileName = Md5(ofnameSplitStringFname);
					StringBuilder sb = new StringBuilder();
					log.info(" if 1");
					sb.append(saveFileName);
					sb.append(".");
					sb.append(fileExtention);
					result = sb.toString();
				} else {
					log.info(" if 2");
					result = Md5(ofname);
				}
			} else {
				log.info(" if 3");
				result = Md5(ofname);
			}
			return result;
	}
	
	@Override
	public String Md5(String ofname) {
		String saveFileName="";
		try {
			saveFileName = new MD5Encoding(ofname).toString();
		}catch(Exception e) {
			throw new IllegalStateException(e);
		}
		return saveFileName;
	}
	
	private boolean writeFile(MultipartFile file , String saveFileName) {
		File dir = new File(Path.FILE_STORE);
		if(!dir.exists()) dir.mkdir();
		
		FileOutputStream fos = null;
		try {
			byte data[] = file.getBytes();
			fos = new FileOutputStream(Path.FILE_STORE+saveFileName);
			fos.write(data);
			fos.flush();
			return true;
		} catch(Exception e) {
				return false;	
		
		} finally {
			try {
				if(fos != null) fos.close();
			} catch (IOException io) {}
		}
		
	}
 
	@Override
	public void updateBoard(Long seq) {
		boardMapper.updateBoard(seq); 
		
	}


	

}
